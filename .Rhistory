geom_sf(data = nasc.super.clusters, fill = NA) +
geom_shadowtext(data = filter(clf, CPS.num > 0), aes(X, Y, label = cluster, colour = factor(cluster)),
bg.color = "white", fontface = "bold", show.legend = FALSE) +
geom_shadowtext(data = filter(clf, CPS.num == 0), aes(X, Y, label = cluster),
colour = "gray50", bg.color = "white", show.legend = FALSE) +
# geom_sf(data = filter(nasc.super.clusters, cluster %in% unique(nasc$cluster.core)), fill = NA) +
coord_sf(crs = crs.proj, # CA Albers Equal Area Projection
xlim = unname(c(map.bounds["xmin"]-100000, map.bounds["xmax"]+100000)),
ylim = unname(c(map.bounds["ymin"], map.bounds["ymax"])))
plot.ns.clusters <- base.map +
geom_point(data = nasc, aes(X, Y, colour = factor(cluster.ns)),
show.legend = FALSE) +
geom_sf(data = nasc.super.clusters.ns, fill = NA) +
geom_shadowtext(data = filter(clf.ns, CPS.num > 0), aes(X, Y, label = cluster, colour = factor(cluster)),
bg.color = "white", fontface = "bold", show.legend = FALSE) +
geom_shadowtext(data = filter(clf.ns, CPS.num == 0), aes(X, Y, label = cluster),
colour = "gray50", bg.color = "white", show.legend = FALSE) +
# geom_sf(data = filter(nasc.super.clusters, cluster %in% unique(nasc$cluster.core)), fill = NA) +
coord_sf(crs = crs.proj, # CA Albers Equal Area Projection
xlim = unname(c(map.bounds["xmin"]-100000, map.bounds["xmax"]+100000)),
ylim = unname(c(map.bounds["ymin"], map.bounds["ymax"])))
plot.core.clusters + plot.ns.clusters
strata.manual
?estimate_point
nasc %>%
select(transect, transect.orig, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens, rher.dens)
nasc %>%
select(transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens, rher.dens)
select(transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens)
str(nasc)
select(nasc, transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens)
nasc.density <- nasc %>%
select(transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens)
nasc %>%
select(transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens)
str(nasc)
nasc %>%
select(transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens) %>%
# When transects have multiple sections (e.g., 041-1, 041-2), interval is not unique
# So create a int.key for computing density along unique intervals for plotting
mutate(int.key = paste(transect, int)) %>%
# Then summarize by transect and unique interval
group_by(transect, int.key)
nasc %>%
select(transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens) %>%
# When transects have multiple sections (e.g., 041-1, 041-2), interval is not unique
# So create a int.key for computing density along unique intervals for plotting
mutate(int.key = paste(transect, int)) %>%
# Then summarize by transect and unique interval
group_by(transect, int.key) %>%
summarise(
lat = lat[1],
long = long[1],
`Engraulis mordax`      = mean(anch.dens),
`Clupea pallasii`       = mean(her.dens),
`Trachurus symmetricus` = mean(jack.dens),
`Scomber japonicus`     = mean(mack.dens),
`Sardinops sagax`       = mean(sar.dens)) %>%
gather(scientificName, density, -transect, -int.key, -lat, -long) %>%
mutate(bin       = cut(density, dens.breaks, include.lowest = TRUE),
bin.level = as.numeric(bin))
# Summarise nasc density
# Format for plotting
nasc.density <- nasc %>%
select(transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens) %>%
# When transects have multiple sections (e.g., 041-1, 041-2), interval is not unique
# So create a int.key for computing density along unique intervals for plotting
mutate(int.key = paste(transect, int)) %>%
# Then summarize by transect and unique interval
group_by(transect, int.key) %>%
summarise(
lat = lat[1],
long = long[1],
`Engraulis mordax`      = mean(anch.dens),
`Clupea pallasii`       = mean(her.dens),
`Trachurus symmetricus` = mean(jack.dens),
`Scomber japonicus`     = mean(mack.dens),
`Sardinops sagax`       = mean(sar.dens)) %>%
gather(scientificName, density, -transect, -int.key, -lat, -long) %>%
mutate(bin       = cut(density, dens.breaks, include.lowest = TRUE),
bin.level = as.numeric(bin))
nasc.density
ggplot(nasc.density, aes(transect, log(sensity))) + geom_line() + facet_wrap(~scientificName)
ggplot(nasc.density, aes(transect, log(density))) + geom_line() + facet_wrap(~scientificName)
# Summarise biomass density by transect and species
nasc.density.summ <- nasc.density %>%
group_by(scientificName, transect) %>%
summarise(density = mean(density))
ggplot(nasc.density.summ, aes(transect, log(density))) + geom_line() + facet_wrap(~scientificName)
ggplot(nasc.density.summ, aes(transect, log(density))) + geom_line() + facet_wrap(~scientificName) + coord_flip()
# Summarise biomass density by transect and species
nasc.density.summ <- nasc.density %>%
group_by(scientificName, transect, lat) %>%
summarise(density = mean(density))
ggplot(nasc.density.summ, aes(lat, log(density))) + geom_line() + facet_wrap(~scientificName) + coord_flip()
# Summarise biomass density by transect and species
nasc.density.summ <- nasc.density %>%
group_by(scientificName, transect) %>%
summarise(lat = lat[1], density = mean(density))
ggplot(nasc.density, aes(lat, log(density))) + geom_line() + facet_wrap(~scientificName)
ggplot(nasc.density.summ, aes(lat, log(density))) + geom_line() + facet_wrap(~scientificName)
ggplot(nasc.density.summ, aes(lat, log(density))) + geom_line() + facet_wrap(~scientificName) + coord_flip()
ggplot(nasc.density.summ, aes(lat, log(density))) +
geom_line() +
geom_text(label = transect) +
facet_wrap(~scientificName) + coord_flip()
ggplot(nasc.density.summ, aes(lat, log(density))) +
geom_line() +
geom_text(aes(label = transect)) +
facet_wrap(~scientificName) + coord_flip()
ggplot(nasc.density.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect)) +
facet_wrap(~scientificName) + coord_flip()
# Summarise biomass density by transect and species
nasc.density.summ <- nasc.density %>%
group_by(scientificName, transect) %>%
summarise(lat = lat[1], density = mean(density)) %>%
mutate(pos = case_when(
density > 0 ~ TRUE,
TRUE ~ FALSE))
ggplot(nasc.density.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos)) +
facet_wrap(~scientificName) + coord_flip()
str(nasc)
str(clf)
?starts_with
select(clf, cluster.core = cluster, starts_with("prop"))
# TODO-------------------------------------------------------------------------
# Create separate nasc dfs with core and nearshore proportions
nasc.core.final <- nasc %>%
select(transect, Interval, int, cluster.core, lat, long, X, Y, cps.nasc) %>%
left_join(select(clf, cluster.core = cluster, starts_with("prop")))
nasc.core.final
nasc.core.final <- nasc %>%
select(transect, Interval, int, cluster.ns, lat, long, X, Y, cps.nasc)
# TODO-------------------------------------------------------------------------
# Create separate nasc dfs with core and nearshore proportions
nasc.core.final <- nasc %>%
select(transect, Interval, int, cluster.core, lat, long, X, Y, cps.nasc) %>%
left_join(select(clf, cluster.core = cluster, starts_with("prop")))
nasc.ns.final <- nasc %>%
select(transect, Interval, int, cluster.ns, lat, long, X, Y, cps.nasc)
str(clf.ns)
nasc.ns.final <- nasc %>%
select(transect, Interval, int, cluster.ns, lat, long, X, Y, cps.nasc) %>%
left_join(select(clf.ns, cluster.ns = cluster, starts_with("prop")))
ggplot(nasc.core.final, aes(lat, long, colour = factor(cluster), size = cps.nasc)) +
geom_point()
ggplot(nasc.core.final, aes(lat, long, colour = factor(cluster.core), size = cps.nasc)) +
geom_point()
ggplot(nasc.core.final, aes(long, lat, colour = factor(cluster.core), size = cps.nasc)) +
geom_point()
ggplot(nasc.ns.final, aes(long, lat, colour = factor(cluster.ns), size = cps.nasc)) +
geom_point()
# TODO-------------------------------------------------------------------------
# Create separate nasc dfs with core and nearshore proportions
nasc.core.final <- nasc %>%
select(transect, Interval, int, cluster.core, lat, long, X, Y, cps.nasc) %>%
left_join(select(clf, cluster.core = cluster, starts_with("prop"), ends_with("dens")))
nasc.ns.final <- nasc %>%
select(transect, Interval, int, cluster.ns, lat, long, X, Y, cps.nasc) %>%
left_join(select(clf.ns, cluster.ns = cluster, starts_with("prop"), ends_with("dens")))
nasc.density.core <- nasc.core.final %>%
select(transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens)
str(nsc.core.final)
str(nasc.core.final)
select(clf, cluster.core = cluster, starts_with("prop."), ends_with(".dens"))
str(clf)
# TODO-------------------------------------------------------------------------
# Create separate nasc dfs with core and nearshore proportions
nasc.core.final <- nasc %>%
select(transect, Interval, int, cluster.core, lat, long, X, Y, cps.nasc) %>%
left_join(select(clf, cluster.core = cluster, starts_with("prop.")))
nasc.ns.final <- nasc %>%
select(transect, Interval, int, cluster.ns, lat, long, X, Y, cps.nasc) %>%
left_join(select(clf.ns, cluster.ns = cluster, starts_with("prop.")))
str(nasc)
nasc.core.final <- nasc %>%
select(transect, Interval, int, cluster.core, lat, long, X, Y, NASC, cps.nasc) %>%
left_join(select(clf, cluster.core = cluster, starts_with("sigmawg."), starts_with("prop.")))
str(nasc.core.final)
# TODO-------------------------------------------------------------------------
# Create separate nasc dfs with core and nearshore proportions
nasc.core.final <- nasc %>%
select(transect, Interval, int, cluster.core, lat, long, X, Y, NASC, cps.nasc) %>%
left_join(select(clf, cluster.core = cluster, starts_with("sigmawg."), starts_with("prop."))) %>%
mutate(
anch.dens = cps.nasc*prop.anch / (4*pi*sigmawg.anch) / 1000,
her.dens  = cps.nasc*prop.her  / (4*pi*sigmawg.her)  / 1000,
jack.dens = cps.nasc*prop.jack / (4*pi*sigmawg.jack) / 1000,
mack.dens = cps.nasc*prop.mack / (4*pi*sigmawg.mack) / 1000,
sar.dens  = cps.nasc*prop.sar  / (4*pi*sigmawg.sar)  / 1000,
rher.dens = cps.nasc*prop.rher / (4*pi*sigmawg.rher) / 1000)
# TODO-------------------------------------------------------------------------
# Create separate nasc dfs with core and nearshore proportions
nasc.core.final <- nasc %>%
select(transect, Interval, int, cluster.core, lat, long, X, Y, NASC, cps.nasc) %>%
left_join(select(clf, cluster.core = cluster, starts_with("sigmawg."), starts_with("prop."))) %>%
mutate(
anch.dens = cps.nasc*prop.anch / (4*pi*sigmawg.anch) / 1000,
her.dens  = cps.nasc*prop.her  / (4*pi*sigmawg.her)  / 1000,
jack.dens = cps.nasc*prop.jack / (4*pi*sigmawg.jack) / 1000,
mack.dens = cps.nasc*prop.mack / (4*pi*sigmawg.mack) / 1000,
sar.dens  = cps.nasc*prop.sar  / (4*pi*sigmawg.sar)  / 1000)
nasc.ns.final <- nasc %>%
select(transect, Interval, int, cluster.ns, lat, long, X, Y, NASC, cps.nasc) %>%
left_join(select(clf, cluster.ns = cluster, starts_with("sigmawg."), starts_with("prop."))) %>%
mutate(
anch.dens = cps.nasc*prop.anch / (4*pi*sigmawg.anch) / 1000,
her.dens  = cps.nasc*prop.her  / (4*pi*sigmawg.her)  / 1000,
jack.dens = cps.nasc*prop.jack / (4*pi*sigmawg.jack) / 1000,
mack.dens = cps.nasc*prop.mack / (4*pi*sigmawg.mack) / 1000,
sar.dens  = cps.nasc*prop.sar  / (4*pi*sigmawg.sar)  / 1000)
## i.e., re-join with clf and clf.ns
# Re-summarise nasc.density to define strata
## Core
nasc.density.core <- nasc.core.final %>%
select(transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens) %>%
# When transects have multiple sections (e.g., 041-1, 041-2), interval is not unique
# So create a int.key for computing density along unique intervals for plotting
mutate(int.key = paste(transect, int)) %>%
# Then summarize by transect and unique interval
group_by(transect, int.key) %>%
summarise(
lat = lat[1],
long = long[1],
`Engraulis mordax`      = mean(anch.dens),
`Clupea pallasii`       = mean(her.dens),
`Trachurus symmetricus` = mean(jack.dens),
`Scomber japonicus`     = mean(mack.dens),
`Sardinops sagax`       = mean(sar.dens)) %>%
gather(scientificName, density, -transect, -int.key, -lat, -long) %>%
mutate(bin       = cut(density, dens.breaks, include.lowest = TRUE),
bin.level = as.numeric(bin))
nasc.density.core
## Nearshore
nasc.density.ns <- nasc.ns.final %>%
select(transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens) %>%
# When transects have multiple sections (e.g., 041-1, 041-2), interval is not unique
# So create a int.key for computing density along unique intervals for plotting
mutate(int.key = paste(transect, int)) %>%
# Then summarize by transect and unique interval
group_by(transect, int.key) %>%
summarise(
lat = lat[1],
long = long[1],
`Engraulis mordax`      = mean(anch.dens),
`Clupea pallasii`       = mean(her.dens),
`Trachurus symmetricus` = mean(jack.dens),
`Scomber japonicus`     = mean(mack.dens),
`Sardinops sagax`       = mean(sar.dens)) %>%
gather(scientificName, density, -transect, -int.key, -lat, -long) %>%
mutate(bin       = cut(density, dens.breaks, include.lowest = TRUE),
bin.level = as.numeric(bin))
# Summarise biomass density by transect and species
nasc.density.summ <- nasc.density %>%
group_by(scientificName, transect) %>%
summarise(lat = lat[1], density = mean(density)) %>%
mutate(pos = case_when(
density > 0 ~ TRUE,
TRUE ~ FALSE))
nasc.density.ns.summ <- nasc.density.ns %>%
group_by(scientificName, transect) %>%
summarise(lat = lat[1], density = mean(density)) %>%
mutate(pos = case_when(
density > 0 ~ TRUE,
TRUE ~ FALSE))
str(nasc.density.summ)
ggplot(nasc.density.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos)) +
facet_wrap(~scientificName) + coord_flip()
dens.plot <- ggplot(nasc.density.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos)) +
facet_wrap(~scientificName) + coord_flip()
dens.plot.ns <- ggplot(nasc.density.ns.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos)) +
facet_wrap(~scientificName) + coord_flip()
dens.plot.ns
nasc.density.ns.summ
head(nasc.density.ns)
nasc.ns.final
nasc.ns.final <- nasc %>%
select(transect, Interval, int, cluster.ns, lat, long, X, Y, NASC, cps.nasc)
head(nasc.ns.final)
hist(nasc.ns.final$cps.nasc)
hist(nasc.core.final$cps.nasc)
nasc.ns.final <- nasc %>%
select(transect, Interval, int, cluster.ns, lat, long, X, Y, NASC, cps.nasc) %>%
left_join(select(clf.ns, cluster.ns = cluster, starts_with("sigmawg."), starts_with("prop."))) %>%
mutate(
anch.dens = cps.nasc*prop.anch / (4*pi*sigmawg.anch) / 1000,
her.dens  = cps.nasc*prop.her  / (4*pi*sigmawg.her)  / 1000,
jack.dens = cps.nasc*prop.jack / (4*pi*sigmawg.jack) / 1000,
mack.dens = cps.nasc*prop.mack / (4*pi*sigmawg.mack) / 1000,
sar.dens  = cps.nasc*prop.sar  / (4*pi*sigmawg.sar)  / 1000)
head(nasc.ns.final)
## i.e., re-join with clf and clf.ns
# Re-summarise nasc.density to define strata
## Core
nasc.density.core <- nasc.core.final %>%
select(transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens) %>%
# When transects have multiple sections (e.g., 041-1, 041-2), interval is not unique
# So create a int.key for computing density along unique intervals for plotting
mutate(int.key = paste(transect, int)) %>%
# Then summarize by transect and unique interval
group_by(transect, int.key) %>%
summarise(
lat = lat[1],
long = long[1],
`Engraulis mordax`      = mean(anch.dens),
`Clupea pallasii`       = mean(her.dens),
`Trachurus symmetricus` = mean(jack.dens),
`Scomber japonicus`     = mean(mack.dens),
`Sardinops sagax`       = mean(sar.dens)) %>%
gather(scientificName, density, -transect, -int.key, -lat, -long) %>%
mutate(bin       = cut(density, dens.breaks, include.lowest = TRUE),
bin.level = as.numeric(bin))
## Nearshore
nasc.density.ns <- nasc.ns.final %>%
select(transect, int, lat, long,
anch.dens, her.dens, jack.dens, mack.dens, sar.dens) %>%
# When transects have multiple sections (e.g., 041-1, 041-2), interval is not unique
# So create a int.key for computing density along unique intervals for plotting
mutate(int.key = paste(transect, int)) %>%
# Then summarize by transect and unique interval
group_by(transect, int.key) %>%
summarise(
lat = lat[1],
long = long[1],
`Engraulis mordax`      = mean(anch.dens),
`Clupea pallasii`       = mean(her.dens),
`Trachurus symmetricus` = mean(jack.dens),
`Scomber japonicus`     = mean(mack.dens),
`Sardinops sagax`       = mean(sar.dens)) %>%
gather(scientificName, density, -transect, -int.key, -lat, -long) %>%
mutate(bin       = cut(density, dens.breaks, include.lowest = TRUE),
bin.level = as.numeric(bin))
# Summarise biomass density by transect and species
nasc.density.summ <- nasc.density %>%
group_by(scientificName, transect) %>%
summarise(lat = lat[1], density = mean(density)) %>%
mutate(pos = case_when(
density > 0 ~ TRUE,
TRUE ~ FALSE))
nasc.density.ns.summ <- nasc.density.ns %>%
group_by(scientificName, transect) %>%
summarise(lat = lat[1], density = mean(density)) %>%
mutate(pos = case_when(
density > 0 ~ TRUE,
TRUE ~ FALSE))
dens.plot <- ggplot(nasc.density.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos)) +
facet_wrap(~scientificName) + coord_flip()
dens.plot.ns <- ggplot(nasc.density.ns.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos)) +
facet_wrap(~scientificName) + coord_flip()
dens.plot.ns
dens.plot + dens.plot.ns
dens.plot <- ggplot(nasc.density.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos)) +
facet_wrap(~scientificName, ncol = 1) + coord_flip()
dens.plot.ns <- ggplot(nasc.density.ns.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos)) +
facet_wrap(~scientificName, ncol = 1) + coord_flip()
dens.plot + dens.plot.ns
dens.plot <- ggplot(nasc.density.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos)) +
facet_wrap(~scientificName, nrow = 1) + coord_flip()
dens.plot.ns <- ggplot(nasc.density.ns.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos)) +
facet_wrap(~scientificName, nrow = 1) + coord_flip()
dens.plot + dens.plot.ns
dens.plot <- ggplot(nasc.density.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos), show.legend=FALSE) +
facet_wrap(~scientificName, nrow = 1) + coord_flip()
dens.plot.ns <- ggplot(nasc.density.ns.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos),show.legend = FALSE) +
facet_wrap(~scientificName, nrow = 1) + coord_flip()
dens.plot + dens.plot.ns
dens.plot <- ggplot(nasc.density.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos), show.legend=FALSE) +
facet_wrap(~scientificName, nrow = 1) + coord_flip() +
ggtitle("Core")
dens.plot.ns <- ggplot(nasc.density.ns.summ, aes(lat, log(density+1))) +
geom_line() +
geom_text(aes(label = transect, colour = pos),show.legend = FALSE) +
facet_wrap(~scientificName, nrow = 1) + coord_flip()+
ggtitle("Nearshore")
dens.plot + dens.plot.ns
strata.manual.ns <- bind_rows(
data.frame(
scientificName = "Clupea pallasii",
stratum = 1,
transect = 76:106),
data.frame(
scientificName = "Engraulis mordax",
stratum = 1,
transect = 91:101),
data.frame(
scientificName = "Sardinops sagax",
stratum = 1,
transect = 81:93),
data.frame(
scientificName = "Trachurus symmetricus",
stratum = 1,
transect = 65:82)
)
# Create new strata with area estimates
strata.manual <- bind_rows(
data.frame(
scientificName = "Clupea pallasii",
stratum = 1,
transect = 65:69),
data.frame(
scientificName = "Clupea pallasii",
stratum = 2,
transect = 78:106),
data.frame(
scientificName = "Engraulis mordax",
stratum = 1,
transect = 79:100),
data.frame(
scientificName = "Sardinops sagax",
stratum = 1,
transect = 65:94),
data.frame(
scientificName = "Scomber japonicus",
stratum = 1,
transect = 65:94),
data.frame(
scientificName = "Trachurus symmetricus",
stratum = 1,
transect = 65:98)
)
# Create new strata with area estimates
strata.final <- bind_rows(
data.frame(
scientificName = "Clupea pallasii",
stratum = 1,
transect = 65:69),
data.frame(
scientificName = "Clupea pallasii",
stratum = 2,
transect = 78:106),
data.frame(
scientificName = "Engraulis mordax",
stratum = 1,
transect = 79:100),
data.frame(
scientificName = "Sardinops sagax",
stratum = 1,
transect = 65:94),
data.frame(
scientificName = "Scomber japonicus",
stratum = 1,
transect = 65:94),
data.frame(
scientificName = "Trachurus symmetricus",
stratum = 1,
transect = 65:98)
)
strata.final.ns <- bind_rows(
data.frame(
scientificName = "Clupea pallasii",
stratum = 1,
transect = 76:106),
data.frame(
scientificName = "Engraulis mordax",
stratum = 1,
transect = 91:101),
data.frame(
scientificName = "Sardinops sagax",
stratum = 1,
transect = 81:93),
data.frame(
scientificName = "Trachurus symmetricus",
stratum = 1,
transect = 65:82)
)
devtools::install_github("kstierhoff/atmData")
pacman::p_unlock()
pacman::p_unload()
install.packages(c("blob", "commonmark", "dbplyr", "htmlwidgets", "learnr", "ps", "renv", "servr", "sf", "tibble", "vctrs", "XML"))
install.packages("sf")
install.packages("sf")
