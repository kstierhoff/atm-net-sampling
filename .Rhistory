source("C:/KLS/CODE/Github/atm-net-sampling/Doc/settings.R")
source(here::here("Doc/settings.R"))
pacman::p_load(atmData)
# Backscatter data
## Import backscatter data
nasc.2019 <- nasc_density_1907RL
nasc.2019 <- nasc_density_1907RL
nasc.2021 <- nasc_density_2107RL
nasc.2022 <- nasc_density_2207RL
str(nasc.2019)
# Backscatter data
## Import backscatter data from {atmData}
nasc.2019 <- nasc_density_1907RL %>%
select(transect, transect.name, Interval, datetime, vessel.name, vessel.orig, Region, NASC, cps.nasc, starts_with("prop."), )
str(nasc.2019)
# Backscatter data
## Import backscatter data from {atmData}
nasc.2019 <- nasc_density_1907RL %>%
select(transect, transect.name, Interval, datetime, vessel.name, vessel.orig, Region, NASC, cps.nasc, starts_with("prop."), ends_with(".dens"))
str(nasc.2019)
nasc.2019 <- nasc_density_1907RL
# Backscatter data
## Import backscatter data from {atmData}
nasc.2019 <- nasc_density_1907RL %>%
select(transect, transect.name, Interval, datetime, vessel.name, vessel.orig,
lat, long, cluster, cluster.distance, Region,
NASC, cps.nasc, starts_with("prop."), ends_with(".dens"))
nasc.2021 <- nasc_density_2107RL %>%
select(transect, transect.name, Interval, datetime, vessel.name, vessel.orig,
lat, long, cluster, cluster.distance, Region,
NASC, cps.nasc, starts_with("prop."), ends_with(".dens"))
nasc.2022 <- nasc_density_2207RL %>%
select(transect, transect.name, Interval, datetime, vessel.name, vessel.orig,
lat, long, cluster, cluster.distance, Region,
NASC, cps.nasc, starts_with("prop."), ends_with(".dens"))
# Backscatter data
## Import backscatter data from {atmData}
nasc.2019 <- nasc_density_1907RL %>%
select(transect, transect.name, Interval, datetime, vessel.name, vessel.orig,
lat, long, cluster, cluster.distance, Region,
NASC, cps.nasc, starts_with("prop."), ends_with(".dens")) %>%
mutate(survey = "1907RL")
nasc.2021 <- nasc_density_2107RL %>%
select(transect, transect.name, Interval, datetime, vessel.name, vessel.orig,
lat, long, cluster, cluster.distance, Region,
NASC, cps.nasc, starts_with("prop."), ends_with(".dens")) %>%
mutate(survey = "2107RL")
nasc.2022 <- nasc_density_2207RL %>%
select(transect, transect.name, Interval, datetime, vessel.name, vessel.orig,
lat, long, cluster, cluster.distance, Region,
NASC, cps.nasc, starts_with("prop."), ends_with(".dens")) %>%
mutate(survey = "2207RL")
nasc <- nasc.2019 %>% bind_rows(nasc.2021) %>% bind_rows(nasc.2022)
str(nasc)
nasc <- nasc.2019 %>% bind_rows(nasc.2021) %>% bind_rows(nasc.2022) %>%
select(everything(), starts_with("prop."), ends_with(".dens"))
str(nasc)
nasc <- nasc.2019 %>% bind_rows(nasc.2021) %>% bind_rows(nasc.2022) %>%
select(transect:cps.nasc, starts_with("prop."), ends_with(".dens"))
str(nasc)
# Backscatter data
## Import backscatter data from {atmData}
nasc.2019 <- nasc_density_1907RL %>%
select(transect, transect.name, Interval, datetime, vessel.name, vessel.orig,
lat, long, cluster, cluster.distance, Region,
NASC, cps.nasc, starts_with("prop."), ends_with(".dens")) %>%
mutate(survey = "1907RL")
nasc.2021 <- nasc_density_2107RL %>%
select(transect, transect.name, Interval, datetime, vessel.name, vessel.orig,
lat, long, cluster, cluster.distance, Region,
NASC, cps.nasc, starts_with("prop."), ends_with(".dens")) %>%
mutate(survey = "2107RL")
nasc.2022 <- nasc_density_2207RL %>%
select(transect, transect.name, Interval, datetime, vessel.name, vessel.orig,
lat, long, cluster, cluster.distance, Region,
NASC, cps.nasc, starts_with("prop."), ends_with(".dens")) %>%
mutate(survey = "2207RL")
nasc <- nasc.2019 %>% bind_rows(nasc.2021) %>% bind_rows(nasc.2022)
str(nasc)
nasc <- nasc.2019 %>% bind_rows(nasc.2021) %>% bind_rows(nasc.2022) %>%
select(transect:cps.nasc, survey, starts_with("prop."), ends_with(".dens"))
str(nasc)
nasc <- nasc.2019 %>% bind_rows(nasc.2021) %>% bind_rows(nasc.2022) %>%
select(survey, transect:cps.nasc, starts_with("prop."), ends_with(".dens"))
saveRDS(nasc, here::here("Data/backscatter/nasc_core.rds"))
saveRDS(nasc.2019, here::here("Data/backscatter/nasc_core_1907RL.rds"))
saveRDS(nasc.2021, here::here("Data/backscatter/nasc_core_2107RL.rds"))
nasc_core <- readRDS(here::here("Data/backscatter/nasc_core.rds"))
str(nasc_core)
View(nasc)
pacman::p_load(tidyverse, lubridate, here, scatterpie, patchwork, sf)
load("C:/KLS/CODE/Github/estimATM/1907RL/Output/clf_final.Rdata")
load("C:/KLS/CODE/Github/estimATM/1907RL/Output/clf_ts_proportions.Rdata")
saveRDS(clf, here::here("Data/cluster/clf_1907RL.rds"))
load("C:/KLS/CODE/Github/estimATM/2107RL/Output/clf_ts_proportions.Rdata")
saveRDS(clf, here::here("Data/cluster/clf_2107RL.rds"))
load("C:/KLS/CODE/Github/estimATM/2207RL/Output/clf_ts_proportions.Rdata")
saveRDS(clf, here::here("Data/cluster/clf_2207RL.rds"))
# Load specimen data
clf.2019 <- readRDS(here::here("Data/cluster/clf_1907RL.rds")) %>%
mutate(survey = "1907RL")
clf.2021 <- readRDS(here::here("Data/cluster/clf_2107RL.rds")) %>%
mutate(survey = "2107RL")
clf.2022 <- readRDS(here::here("Data/cluster/clf_2207RL.rds")) %>%
mutate(survey = "2207RL")
# Load clf data
clf.2019 <- readRDS(here::here("Data/cluster/clf_1907RL.rds")) %>%
mutate(survey = "1907RL")
clf.2021 <- readRDS(here::here("Data/cluster/clf_2107RL.rds")) %>%
mutate(survey = "2107RL")
clf.2022 <- readRDS(here::here("Data/cluster/clf_2207RL.rds")) %>%
mutate(survey = "2207RL")
# Combine specimen data
clf.all <- clf.2019 %>% bind_rows(clf.2021) %>% bind_rows(clf.2022)
saveRDS(clf.all, here::here("Data/cluster/clf_all.rds"))
# pacman::p_load(tidyverse, lubridate, here)
# import.data <- TRUE
# Catch data
## Import catch data
if (import.data) {
load("C:/KLS/CODE/Github/estimATM/1907RL/Output/catch_final.Rdata")
saveRDS(catch, here::here("Data/trawl/catch_1907RL.rds"))
load("C:/KLS/CODE/Github/estimATM/2107RL/Output/catch_final.Rdata")
saveRDS(catch, here::here("Data/trawl/catch_2107RL.rds"))
load("C:/KLS/CODE/Github/estimATM/2207RL/Output/catch_final.Rdata")
saveRDS(catch, here::here("Data/trawl/catch_2207RL.rds"))
}
# Load catch data
catch.2019 <- readRDS(here::here("Data/trawl/catch_1907RL.rds")) %>%
mutate(survey = "1907RL")
catch.2021 <- readRDS(here::here("Data/trawl/catch_2107RL.rds")) %>%
mutate(survey = "2107RL")
catch.2022 <- readRDS(here::here("Data/trawl/catch_2207RL.rds")) %>%
mutate(survey = "2207RL")
# Combine catch data
catch.trawl <- catch.2019 %>% bind_rows(catch.2021) %>% bind_rows(catch.2022)
saveRDS(catch.trawl, here::here("Data/trawl/catch_trawl.rds"))
# Specimen data
## Import specimen data
if (import.data) {
load("C:/KLS/CODE/Github/estimATM/1907RL/Output/lengths_final.Rdata")
saveRDS(lengths, here::here("Data/trawl/lengths_1907RL.rds"))
load("C:/KLS/CODE/Github/estimATM/2107RL/Output/lengths_final.Rdata")
saveRDS(lengths, here::here("Data/trawl/lengths_2107RL.rds"))
load("C:/KLS/CODE/Github/estimATM/2207RL/Output/lengths_final.Rdata")
saveRDS(lengths, here::here("Data/trawl/lengths_2207RL.rds"))
} else {
# Load specimen data
lengths.2019 <- readRDS(here::here("Data/trawl/lengths_1907RL.rds")) %>%
mutate(survey = "1907RL")
lengths.2021 <- readRDS(here::here("Data/trawl/lengths_2107RL.rds")) %>%
mutate(survey = "2107RL")
lengths.2022 <- readRDS(here::here("Data/trawl/lengths_2207RL.rds")) %>%
mutate(survey = "2207RL")
# Combine specimen data
lengths.trawl <- lengths.2019 %>% bind_rows(lengths.2021) %>% bind_rows(lengths.2022)
saveRDS(lengths.trawl, here::here("Data/trawl/lengths_trawl.rds"))
}
## Import clf data
if (import.data) {
load("C:/KLS/CODE/Github/estimATM/1907RL/Output/clf_ts_proportions.Rdata")
saveRDS(clf, here::here("Data/trawl/clf_1907RL.rds"))
load("C:/KLS/CODE/Github/estimATM/2107RL/Output/clf_ts_proportions.Rdata")
saveRDS(clf, here::here("Data/trawl/clf_2107RL.rds"))
load("C:/KLS/CODE/Github/estimATM/2207RL/Output/clf_ts_proportions.Rdata")
saveRDS(clf, here::here("Data/trawl/clf_2207RL.rds"))
} else {
# Load clf data
clf.2019 <- readRDS(here::here("Data/trawl/clf_1907RL.rds")) %>%
mutate(survey = "1907RL")
clf.2021 <- readRDS(here::here("Data/trawl/clf_2107RL.rds")) %>%
mutate(survey = "2107RL")
clf.2022 <- readRDS(here::here("Data/trawl/clf_2207RL.rds")) %>%
mutate(survey = "2207RL")
# Combine specimen data
clf.all <- clf.2019 %>% bind_rows(clf.2021) %>% bind_rows(clf.2022)
saveRDS(clf.all, here::here("Data/trawl/clf_all.rds"))
}
import.data
str(clf.all)
pie.radius
# Calculate pie radius based on latitude range
# Use nav data to resize map to survey progress
map.bounds <- clf.all %>%
st_as_sf(coords = c(long, lat), crs = crs.geog) %>%
st_transform(crs = crs.proj) %>%
st_bbox()
# Calculate pie radius based on latitude range
# Use nav data to resize map to survey progress
map.bounds <- clf.all %>%
st_as_sf(coords = c("long", "lat"), crs = crs.geog) %>%
st_transform(crs = crs.proj) %>%
st_bbox()
pie.scale
pie.radius <- as.numeric(abs(map.bounds$ymin - map.bounds$ymax)*pie.scale)
# Calculate pie radius based on latitude range
# Use clf data to resize map, if needed
map.bounds <- clf.all %>%
st_as_sf(coords = c("long", "lat"), crs = crs.geog) %>%
st_transform(crs = crs.proj) %>%
st_bbox()
pie.radius <- as.numeric(abs(map.bounds$ymin - map.bounds$ymax)*pie.scale)
str(clf)
clf.zero <- filter(clf.all, CPS.num == 0)
clf.pos <- filter(clf.all, CPS.num > 0) %>%
arrange(X)
clf.zero
seine.color
trawl.color
## Pie charts-acoustic proportion
base.map +
# Plot trawl pies
geom_scatterpie(data = clf.pos,
aes(X, Y, group = cluster, r = pie.radius, colour = sample.type),
cols = c("prop.anch.wg","prop.her.wg","prop.jack.wg",
"prop.mack.wg", "prop.rher.wg", "prop.sar.wg", "prop.other.wg"),
alpha = 0.8) +
# Plot empty trawl locations
geom_point(data = clf.zero, aes(X, Y),
size = 3, shape = 21, fill = 'black', colour = 'white') +
# Configure pie outline colors
scale_colour_manual(name = "Sample type",
labels = c("Purse seine", "Trawl"),
values = c(seine.color, trawl.color),
guide = "none") +
# Configure trawl scale
scale_fill_manual(name = 'Species',
labels = c("Anchovy", "P. herring", "J. mackerel",
"P. mackerel", "R. herring", "Sardine", "Other"),
values = c(anchovy.color, pac.herring.color, jack.mack.color,
pac.mack.color, rnd.herring.color,
sardine.color, other.color)) +
# Plot panel label
ggtitle("Acoustic Proportions (Weight) by Cluster") +
coord_sf(crs = crs.proj,
xlim = unname(c(map.bounds["xmin"], map.bounds["xmax"])),
ylim = unname(c(map.bounds["ymin"], map.bounds["ymax"])))
str(clf.all)
other.color
base.map +
# Plot trawl pies
geom_scatterpie(data = clf.pos,
aes(X, Y, group = cluster, r = pie.radius, colour = sample.type),
cols = c("prop.anch.wg","prop.her.wg","prop.jack.wg",
"prop.mack.wg", "prop.rher.wg", "prop.sar.wg", "prop.other.wg"),
alpha = 0.8)
## Pie charts-acoustic proportion
base.map +
# Plot trawl pies
geom_scatterpie(data = clf.pos,
aes(X, Y, group = cluster, r = pie.radius, colour = sample.type),
cols = c("prop.anch.wg","prop.her.wg","prop.jack.wg",
"prop.mack.wg", "prop.sar.wg"),
alpha = 0.8) +
# Plot empty trawl locations
geom_point(data = clf.zero, aes(X, Y),
size = 3, shape = 21, fill = 'black', colour = 'white') +
# Configure pie outline colors
scale_colour_manual(name = "Sample type",
labels = c("Purse seine", "Trawl"),
values = c(seine.color, trawl.color),
guide = "none") +
# Configure trawl scale
scale_fill_manual(name = 'Species',
labels = c("Anchovy", "P. herring", "J. mackerel",
"P. mackerel", "Sardine"),
values = c(anchovy.color, pac.herring.color, jack.mack.color,
pac.mack.color, sardine.color)) +
# Plot panel label
ggtitle("Acoustic Proportions (Weight) by Cluster") +
coord_sf(crs = crs.proj,
xlim = unname(c(map.bounds["xmin"], map.bounds["xmax"])),
ylim = unname(c(map.bounds["ymin"], map.bounds["ymax"])))
## Pie charts-acoustic proportion
base.map +
# Plot trawl pies
geom_scatterpie(data = clf.pos,
aes(X, Y, group = cluster, r = pie.radius, colour = sample.type),
cols = c("prop.anch.wg","prop.her.wg","prop.jack.wg",
"prop.mack.wg", "prop.sar.wg"),
alpha = 0.8) +
# Plot empty trawl locations
geom_point(data = clf.zero, aes(X, Y),
size = 3, shape = 21, fill = 'black', colour = 'white') +
# Configure pie outline colors
scale_colour_manual(name = "Sample type",
labels = c("Purse seine", "Trawl"),
values = c(seine.color, trawl.color)) +
# scale_colour_manual(name = "Sample type",
#                     labels = c("Purse seine", "Trawl"),
#                     values = c(seine.color, trawl.color),
#                     guide = "none") +
# Configure trawl scale
scale_fill_manual(name = 'Species',
labels = c("Anchovy", "P. herring", "J. mackerel",
"P. mackerel", "Sardine"),
values = c(anchovy.color, pac.herring.color, jack.mack.color,
pac.mack.color, sardine.color)) +
# Plot panel label
ggtitle("Acoustic Proportions (Weight) by Cluster") +
coord_sf(crs = crs.proj,
xlim = unname(c(map.bounds["xmin"], map.bounds["xmax"])),
ylim = unname(c(map.bounds["ymin"], map.bounds["ymax"])))
filter(clf.all, is.na(sample.type))
filter(clf.all, is.na(sample.type)) %>% group_by(survey.name) %>% tally()
filter(clf.all, is.na(sample.type)) %>% group_by(survey) %>% tally()
# Replace missing sample type with "Trawl"
clf.all <- replace_na(clf.all, list(sample.type = "Trawl"))
saveRDS(clf.all, here::here("Data/trawl/clf_all.rds"))
clf.zero <- filter(clf.all, CPS.num == 0)
clf.pos <- filter(clf.all, CPS.num > 0) %>%
arrange(X)
## Pie charts-acoustic proportion
base.map +
# Plot trawl pies
geom_scatterpie(data = clf.pos,
aes(X, Y, group = cluster, r = pie.radius, colour = sample.type),
cols = c("prop.anch.wg","prop.her.wg","prop.jack.wg",
"prop.mack.wg", "prop.sar.wg"),
alpha = 0.8) +
# Plot empty trawl locations
geom_point(data = clf.zero, aes(X, Y),
size = 3, shape = 21, fill = 'black', colour = 'white') +
# Configure pie outline colors
scale_colour_manual(name = "Sample type",
labels = c("Purse seine", "Trawl"),
values = c(seine.color, trawl.color)) +
# scale_colour_manual(name = "Sample type",
#                     labels = c("Purse seine", "Trawl"),
#                     values = c(seine.color, trawl.color),
#                     guide = "none") +
# Configure trawl scale
scale_fill_manual(name = 'Species',
labels = c("Anchovy", "P. herring", "J. mackerel",
"P. mackerel", "Sardine"),
values = c(anchovy.color, pac.herring.color, jack.mack.color,
pac.mack.color, sardine.color)) +
# Plot panel label
ggtitle("Acoustic Proportions (Weight) by Cluster") +
coord_sf(crs = crs.proj,
xlim = unname(c(map.bounds["xmin"], map.bounds["xmax"])),
ylim = unname(c(map.bounds["ymin"], map.bounds["ymax"])))
## Pie charts-acoustic proportion
base.map +
# Plot trawl pies
geom_scatterpie(data = clf.pos,
aes(X, Y, group = cluster, r = pie.radius, colour = sample.type),
cols = c("prop.anch.wg","prop.her.wg","prop.jack.wg",
"prop.mack.wg", "prop.sar.wg"),
alpha = 0.8) +
# Plot empty trawl locations
geom_point(data = clf.zero, aes(X, Y),
size = 3, shape = 21, fill = 'black', colour = 'white') +
# Configure pie outline colors
scale_colour_manual(name = "Sample type",
labels = c("Purse seine", "Trawl"),
values = c(seine.color, trawl.color),
guide = "none") +
# Configure trawl scale
scale_fill_manual(name = 'Species',
labels = c("Anchovy", "P. herring", "J. mackerel",
"P. mackerel", "Sardine"),
values = c(anchovy.color, pac.herring.color, jack.mack.color,
pac.mack.color, sardine.color)) +
# Plot panel label
ggtitle("Acoustic Proportions (Weight) by Cluster") +
coord_sf(crs = crs.proj,
xlim = unname(c(map.bounds["xmin"], map.bounds["xmax"])),
ylim = unname(c(map.bounds["ymin"], map.bounds["ymax"])))
## Pie charts-acoustic proportion
base.map +
# Plot trawl pies
geom_scatterpie(data = clf.pos,
aes(X, Y, group = cluster, r = pie.radius, colour = sample.type),
cols = c("prop.anch.wg","prop.her.wg","prop.jack.wg",
"prop.mack.wg", "prop.sar.wg"),
alpha = 0.8) +
# Plot empty trawl locations
geom_point(data = clf.zero, aes(X, Y),
size = 3, shape = 21, fill = 'black', colour = 'white') +
# Configure pie outline colors
scale_colour_manual(name = "Sample type",
labels = c("Purse seine", "Trawl"),
values = c(seine.color, trawl.color),
guide = "none") +
# Configure trawl scale
scale_fill_manual(name = 'Species',
labels = c("Anchovy", "P. herring", "J. mackerel",
"P. mackerel", "Sardine"),
values = c(anchovy.color, pac.herring.color, jack.mack.color,
pac.mack.color, sardine.color)) +
# Facet by survey
facet_wrap(~survey) +
coord_sf(crs = crs.proj,
xlim = unname(c(map.bounds["xmin"], map.bounds["xmax"])),
ylim = unname(c(map.bounds["ymin"], map.bounds["ymax"])))
## Pie charts-acoustic proportion
base.map +
# Plot trawl pies
geom_scatterpie(data = clf.pos,
aes(X, Y, group = cluster, r = pie.radius, colour = sample.type),
cols = c("prop.anch.wg","prop.her.wg","prop.jack.wg",
"prop.mack.wg", "prop.sar.wg"),
alpha = 0.8) +
# Plot empty trawl locations
geom_point(data = clf.zero, aes(X, Y),
size = 3, shape = 21, fill = 'black', colour = 'white') +
# Configure pie outline colors
scale_colour_manual(name = "Sample type",
labels = c("Purse seine", "Trawl"),
values = c(seine.color, trawl.color),
guide = "none") +
# Configure trawl scale
scale_fill_manual(name = 'Species',
labels = c("Anchovy", "P. herring", "J. mackerel",
"P. mackerel", "Sardine"),
values = c(anchovy.color, pac.herring.color, jack.mack.color,
pac.mack.color, sardine.color)) +
# Facet by survey
facet_grid(sample.type~survey) +
coord_sf(crs = crs.proj,
xlim = unname(c(map.bounds["xmin"], map.bounds["xmax"])),
ylim = unname(c(map.bounds["ymin"], map.bounds["ymax"])))
## Pie charts-acoustic proportion
base.map +
# Plot trawl pies
geom_scatterpie(data = clf.pos,
aes(X, Y, group = cluster, r = pie.radius, colour = sample.type),
cols = c("prop.anch.wg","prop.her.wg","prop.jack.wg",
"prop.mack.wg", "prop.sar.wg"),
alpha = 0.8) +
# Plot empty trawl locations
geom_point(data = clf.zero, aes(X, Y),
size = 3, shape = 21, fill = 'black', colour = 'white') +
# Configure pie outline colors
scale_colour_manual(name = "Sample type",
labels = c("Purse seine", "Trawl"),
values = c(seine.color, trawl.color),
guide = "none") +
# Configure trawl scale
scale_fill_manual(name = 'Species',
labels = c("Anchovy", "P. herring", "J. mackerel",
"P. mackerel", "Sardine"),
values = c(anchovy.color, pac.herring.color, jack.mack.color,
pac.mack.color, sardine.color)) +
# Facet by survey
facet_grid(survey ~ sample.type) +
coord_sf(crs = crs.proj,
xlim = unname(c(map.bounds["xmin"], map.bounds["xmax"])),
ylim = unname(c(map.bounds["ymin"], map.bounds["ymax"])))
## Pie charts-acoustic proportion
clf.grid <- base.map +
# Plot trawl pies
geom_scatterpie(data = clf.pos,
aes(X, Y, group = cluster, r = pie.radius, colour = sample.type),
cols = c("prop.anch.wg","prop.her.wg","prop.jack.wg",
"prop.mack.wg", "prop.sar.wg"),
alpha = 0.8) +
# Plot empty trawl locations
geom_point(data = clf.zero, aes(X, Y),
size = 3, shape = 21, fill = 'black', colour = 'white') +
# Configure pie outline colors
scale_colour_manual(name = "Sample type",
labels = c("Purse seine", "Trawl"),
values = c(seine.color, trawl.color),
guide = "none") +
# Configure trawl scale
scale_fill_manual(name = 'Species',
labels = c("Anchovy", "P. herring", "J. mackerel",
"P. mackerel", "Sardine"),
values = c(anchovy.color, pac.herring.color, jack.mack.color,
pac.mack.color, sardine.color)) +
# Facet by survey
facet_grid(survey ~ sample.type) +
coord_sf(crs = crs.proj,
xlim = unname(c(map.bounds["xmin"], map.bounds["xmax"])),
ylim = unname(c(map.bounds["ymin"], map.bounds["ymax"])))
ggsave(clf.grid, filename = here("Figs/clf_grid.png"),
height = 15, width = 6)
pie.scale  <- 0.02 # 0.01-0.02 works well for coast-wide survey (i.e., summer), larger values (~0.03) for spring
# Set pie scale
pie.radius <- as.numeric(abs(map.bounds$ymin - map.bounds$ymax)*pie.scale)
## Pie charts-acoustic proportion
clf.grid <- base.map +
# Plot trawl pies
geom_scatterpie(data = clf.pos,
aes(X, Y, group = cluster, r = pie.radius, colour = sample.type),
cols = c("prop.anch.wg","prop.her.wg","prop.jack.wg",
"prop.mack.wg", "prop.sar.wg"),
alpha = 0.8) +
# Plot empty trawl locations
geom_point(data = clf.zero, aes(X, Y),
size = 3, shape = 21, fill = 'black', colour = 'white') +
# Configure pie outline colors
scale_colour_manual(name = "Sample type",
labels = c("Purse seine", "Trawl"),
values = c(seine.color, trawl.color),
guide = "none") +
# Configure trawl scale
scale_fill_manual(name = 'Species',
labels = c("Anchovy", "P. herring", "J. mackerel",
"P. mackerel", "Sardine"),
values = c(anchovy.color, pac.herring.color, jack.mack.color,
pac.mack.color, sardine.color)) +
# Facet by survey
facet_grid(survey ~ sample.type) +
coord_sf(crs = crs.proj,
xlim = unname(c(map.bounds["xmin"], map.bounds["xmax"])),
ylim = unname(c(map.bounds["ymin"], map.bounds["ymax"])))
ggsave(clf.grid, filename = here("Figs/clf_grid.png"),
height = 15, width = 6)
str(base.map)
